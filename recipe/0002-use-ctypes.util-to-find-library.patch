From a7e27310df7c60706c60c6a5dd9e642a1633d23f Mon Sep 17 00:00:00 2001
From: Nicholas Devenish <ndevenish@gmail.com>
Date: Mon, 2 Sep 2024 17:42:03 +0100
Subject: [PATCH] Allow for direct library finding

---
 Autogenerated/Bindings/Python/Lib3MF.py | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/Autogenerated/Bindings/Python/Lib3MF.py b/Autogenerated/Bindings/Python/Lib3MF.py
index 1b5e6d2f..64dbf303 100644
--- a/Autogenerated/Bindings/Python/Lib3MF.py
+++ b/Autogenerated/Bindings/Python/Lib3MF.py
@@ -38,6 +38,7 @@ import ctypes
 import platform
 import enum
 import os
+import sys
 
 name = "lib3mf"
 
@@ -753,10 +754,16 @@ class Wrapper:
 			raise ELib3MFException(ErrorCodes.COULDNOTLOADLIBRARY)
 		
 		if (not libraryName) and (not symbolLookupMethodAddress):
-			libraryName = os.path.join(os.path.dirname(os.path.realpath(__file__)),'lib3mf')
+			# Fallback case where Wrapper is supposed to find it itself
+			libraryName = ctypes.util.find_library("3mf")
+			if not libraryName and platform.system() == "Windows":
+				libraryName = os.path.join(os.path.dirname(sys.executable), "Library", "bin", "lib3mf.dll")
 		
 		if libraryName is not None:
-			path = libraryName + '.' + ending
+			path = libraryName
+			if not os.path.isfile(path):
+				path = libraryName + '.' + ending
+
 			try:
 				self.lib = ctypes.CDLL(path)
 			except Exception as e:
-- 
2.39.3 (Apple Git-146)

